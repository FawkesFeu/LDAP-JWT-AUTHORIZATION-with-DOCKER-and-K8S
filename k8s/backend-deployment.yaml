apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: ldap-jwt-app
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ldap-jwt-backend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        livenessProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 40
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      initContainers:
      - name: wait-for-ldap
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          until nc -z ldap-service 389; do
            echo "Waiting for LDAP server..."
            sleep 5
          done
          echo "LDAP server is ready!"
      - name: wait-for-database
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for TimescaleDB server..."
          
          # Wait for database service to be available
          until nc -z timescaledb-service 5432; do
            echo "Database service not ready yet..."
            sleep 10
          done
          echo "Database service is reachable!"
          
          # Wait for database to be fully initialized
          echo "Waiting for database to be fully ready..."
          sleep 60
          echo "TimescaleDB server is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: ldap-jwt-app
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  type: ClusterIP 