apiVersion: apps/v1
kind: Deployment
metadata:
  name: ldap-deployment
  namespace: ldap-jwt-app
  labels:
    app: ldap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ldap
  template:
    metadata:
      labels:
        app: ldap
    spec:
      initContainers:
      - name: ldap-init
        image: osixia/openldap:1.5.0
        command: ["/bin/bash", "-c"]
        args:
          - |
            echo "üöÄ Starting LDAP initialization..."
            
            # Set environment variables
            export LDAP_ORGANISATION="Example Corp"
            export LDAP_DOMAIN="example.com"
            export LDAP_ADMIN_PASSWORD="admin"
            export LDAP_CONFIG_PASSWORD="config"
            export LDAP_READONLY_USER="false"
            export LDAP_BASE_DN="dc=example,dc=com"
            
            # Start LDAP server in background for setup
            /container/tool/run --copy-service &
            LDAP_PID=$!
            
            # Wait for LDAP to be ready
            echo "‚è≥ Waiting for LDAP server to start..."
            for i in {1..30}; do
              if ldapsearch -x -H ldap://localhost -D "cn=admin,dc=example,dc=com" -w admin -b "dc=example,dc=com" "(objectClass=*)" >/dev/null 2>&1; then
                echo "‚úÖ LDAP server is ready!"
                break
              fi
              echo "  Attempt $i/30 - waiting..."
              sleep 2
            done
            
            # Check if users exist
            echo "üîç Checking if users exist..."
            if ldapsearch -x -H ldap://localhost -D "cn=admin,dc=example,dc=com" -w admin -b "ou=users,dc=example,dc=com" "(uid=admin)" | grep -q "numEntries: 1"; then
              echo "‚úÖ Users already exist, skipping initialization"
            else
              echo "üìù Users not found, adding them..."
              
              # Add users OU if it doesn't exist
              if ! ldapsearch -x -H ldap://localhost -D "cn=admin,dc=example,dc=com" -w admin -b "ou=users,dc=example,dc=com" "(objectClass=*)" | grep -q "numEntries: 1"; then
                echo "Adding users organizational unit..."
                ldapadd -x -H ldap://localhost -D "cn=admin,dc=example,dc=com" -w admin << 'EOF'
            dn: ou=users,dc=example,dc=com
            objectClass: top
            objectClass: organizationalUnit
            ou: users
            EOF
              fi
              
              # Add admin user
              echo "Adding admin user..."
              ldapadd -x -H ldap://localhost -D "cn=admin,dc=example,dc=com" -w admin << 'EOF'
            dn: uid=admin,ou=users,dc=example,dc=com
            objectClass: top
            objectClass: inetOrgPerson
            uid: admin
            cn: Administrator
            sn: Administrator
            userPassword: admin123
            employeeType: admin
            employeeNumber: ADMIN_01
            EOF
              
              echo "üéâ User initialization complete!"
            fi
            
            # Stop the background LDAP server
            kill $LDAP_PID
            wait $LDAP_PID 2>/dev/null
            
            echo "‚úÖ LDAP initialization finished!"
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        volumeMounts:
        - name: ldap-data
          mountPath: /var/lib/ldap
        - name: ldap-config
          mountPath: /etc/ldap/slapd.d
      containers:
      - name: ldap
        image: osixia/openldap:1.5.0
        ports:
        - containerPort: 389
        - containerPort: 636
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        volumeMounts:
        - name: ldap-data
          mountPath: /var/lib/ldap
        - name: ldap-config
          mountPath: /etc/ldap/slapd.d
        args: ["--copy-service", "--loglevel", "info"]
        livenessProbe:
          exec:
            command:
            - ldapsearch
            - "-x"
            - "-H"
            - "ldap://localhost"
            - "-b"
            - "dc=example,dc=com"
            - "-D"
            - "cn=admin,dc=example,dc=com"
            - "-w"
            - "admin"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - ldapsearch
            - "-x"
            - "-H"
            - "ldap://localhost"
            - "-D"
            - "cn=admin,dc=example,dc=com"
            - "-w"
            - "admin"
            - "-b"
            - "ou=users,dc=example,dc=com"
            - "(uid=admin)"
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: ldap-data
        persistentVolumeClaim:
          claimName: ldap-data-pvc
      - name: ldap-config
        persistentVolumeClaim:
          claimName: ldap-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ldap-service
  namespace: ldap-jwt-app
  labels:
    app: ldap
spec:
  selector:
    app: ldap
  ports:
  - name: ldap
    port: 389
    targetPort: 389
  - name: ldaps
    port: 636
    targetPort: 636
  type: ClusterIP 